# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export ZPLUG_HOME=$HOME/.zplug

# Check if zplug is installed
if [[ ! -d $ZPLUG_HOME ]]; then
  git clone https://github.com/zplug/zplug $ZPLUG_HOME
  source $ZPLUG_HOME/init.zsh && zplug update --self
fi

source $HOME/.zplug/init.zsh

###############################################################################
#                     Package Definitions && Configs
###############################################################################

# Base packages
zplug "plugins/git", from:oh-my-zsh
zplug "popstas/zsh-command-time"
zplug "zsh-users/zsh-completions", defer:0
zplug "zsh-users/zsh-syntax-highlighting", defer:3, on:"zsh-users/zsh-autosuggestions"
zplug "MichaelAquilina/zsh-you-should-use"

# P10k command line
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
zplug romkatv/powerlevel10k, as:theme, depth:1
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Autosuggest plugin
zplug "zsh-users/zsh-autosuggestions", defer:2, on:"zsh-users/zsh-completions"
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=5'
ZSH_AUTOSUGGEST_STRATEGY=(history completion)

# fzf
zplug 'junegunn/fzf', \
      as:command, \
      use:'bin/{fzf,fzf-tmux}', \
      if:"[[ $OSTYPE == linux* || $OSTYPE == darwin* ]]", \
      hook-build:'./install --key-bindings --completion --no-update-rc'
zplug "junegunn/fzf", from:github, use:"shell/completion.zsh"
zplug "junegunn/fzf", from:github, use:"shell/key-bindings.zsh"

# Added by fzf vim plugin
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Enhanced cd
zplug "b4b4r07/enhancd", use:init.sh
export ENHANCD_DISABLE_DOT=1

# Install neovim from github releases
# The current gh-r command deletes the nvim binary from bin/
# and renames it to neovim in the top level repo dir
# Add a post hook build that copies it back to get around this
zplug "neovim/neovim", \
       from:gh-r, as:command, \
       hook-build:'mv nvim-* nvim && \
                   cp neovim nvim/bin/nvim && \
                   ln -s ~/.zplug/repos/neovim/neovim/nvim/bin/nvim ~/.zplug/bin/nvim'

# Abduco session manager, forked at anuj1102 since doesn't seemed to be
# maintained anymore
zplug "martanne/abduco", \
       from:github, as:command, \
       hook-build:'./configure --prefix=~/.zplug && make && make install'

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
  echo; zplug install
fi

zplug load

###############################################################################
#                                Personal aliases
###############################################################################
#
# When typing vi in neovim terminal open the file in the same instance to
# avoid nested neovim terminals
# https://github.com/mhinz/neovim-remote
if [ -n "$NVIM_LISTEN_ADDRESS" ]; then
  export VISUAL="nvr"
else
  export VISUAL="nvim"
fi
alias vi="$VISUAL"

# Create new editing sessions easily
function nmux() {
    abduco -A $1 nvim -c :terminal
}

# https://superuser.com/questions/458906/zsh-tab-completion-of-git-commands-is-very-slow-how-can-i-turn-it-off
__git_files () {
    _wanted files expl 'local files' _files
}

# Local aliases
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f ~/.aliases ]; then
    . ~/.aliases
fi

# Reconnect ssh-agent
if [[ -S "$SSH_AUTH_SOCK" && ! -h "$SSH_AUTH_SOCK" ]]; then
    ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock;
fi
export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock;

alias ls="ls --color=tty"
alias gg="git grep"

# cmd-k to clear screen
function clear-ls() {
  clear
  ls
  zle && zle .reset-prompt && zle -R
}

zle -N clear-ls
bindkey '^k' clear-ls
